#!/usr/bin/env bash
# {{ ansible_managed }}

set -euo pipefail

{% macro repo_args(repo_name) -%}
-r {{ restic_repositories[repo_name].location }} -p {{ restic_scripts_directory }}/restic-password-{{ repo_name }}
{%- endmacro %}

{% for key, value in (restic_repository.value.environment_variables | default({})).items() %}
export {{ key }}={{ value }}
{% endfor %}

if ! {{ restic_path }} snapshots {{ repo_args(restic_repository.key) }} --latest 1 > /dev/null 2>&1; then
  {{ restic_path }} init {{ repo_args(restic_repository.key) }}
fi

{% for folder in restic_folders %}
{% if restic_repository.key in folder.repositories %}
{{ restic_path }} backup {{ repo_args(restic_repository.key) }} {{ folder.flags | default('') }} --tag {{ folder.tags | join(',') }} {{ folder.paths | map('quote') | join(' ') }}
{% endif -%}
{% endfor -%}

{% for stdout in restic_stdouts %}
{% if restic_repository.key in stdout.repositories %}
{{ stdout.cmd }} | {{ restic_path }} backup {{ repo_args(restic_repository.key) }} {{ folder.flags | default('') }} --tag {{ stdout.tags | join(',') }} --stdin --stdin-filename {{ stdout.filename }}
{% endif -%}
{% endfor -%}

{% if restic_repository.value.forget is defined and restic_repository.value.forget %}
{{ restic_path }} forget {{ repo_args(restic_repository.key) }} {{ restic_repository.value.forget_args | default ('') }}
{% endif -%}

{% if restic_repository.value.check is defined and restic_repository.value.check %}
{{ restic_path }} check {{ repo_args(restic_repository.key) }} {{ restic_repository.value.check_args | default ('') }}
{% endif -%}
